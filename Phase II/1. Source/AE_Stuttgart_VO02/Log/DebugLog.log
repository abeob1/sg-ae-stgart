[10-27-2015 12:24:22][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[STUTTGART]'
[10-27-2015 12:24:25][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:29][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:51][          ExecuteSQLQuery_DT()] Completed with ERROR
[10-27-2015 12:24:51][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [STUTTGART].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [STUTTGART].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[10-27-2015 12:24:51][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:51][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][      GetSystemIntializeInfo()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] There is No Pending Records Found in Integration DB
[10-27-2015 12:24:54][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,POSPrinter,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], T0.U_POSPrinterName,T0.U_AB_POSSync, DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.ItmsGrpCod,  EASIDept = T1.U_AB_EASIDept,ProductType = T1.ProductType,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice, POSPrinter = T1.U_POSPrinterName,POSSync = T1.U_AB_POSSync,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice],T0.U_POSPrinterName,T0.U_AB_POSSync  			FROM [STUTTGART].dbo.OITM T0 			INNER JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM [STUTTGART].dbo.OITM)
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Item Group Sync Query Exec DELETE FROM [LIVE_INTDB].dbo.AB_EASIDepartment INSERT INTO [LIVE_INTDB].dbo.AB_EASIDepartment(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_EASIDepartment) 
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] EASI Group Sync Query Exec  INSERT INTO [LIVE_INTDB].dbo.AB_EASIGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItmsGrpCod,T0.ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_EASIGROUP)
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_EASIGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_EASIGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [STUTTGART].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(WhsCode,ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T5.WhsCode,T0.ItemCode,   CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList       ELSE T2.ListNum END [PriceList], CASE WHEN T0.UgpEntry = -1 THEN T2.ListName       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName       ELSE T4.ListName END [PriceListName], CASE WHEN T0.UgpEntry = -1 THEN T1.Currency       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency       ELSE T3.Currency END [Currency], CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList  LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1)  ORDER BY T0.ItemCode,T5.WhsCode 
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceList = T1.PriceList,PriceListName = T1.PriceListName,Currency = T1.Currency,Price = T1.Price,WhsCode = T1.WhsCode ,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T5.WhsCode,T0.ItemCode,             CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList              ELSE T2.ListNum END [PriceList],             CASE WHEN T0.UgpEntry = -1 THEN T2.ListName              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName              ELSE T4.ListName END [PriceListName],             CASE WHEN T0.UgpEntry = -1 THEN T1.Currency              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency              ELSE T3.Currency END [Currency], 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [STUTTGART].dbo.OITM T0 			LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry             LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList              LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.PriceList = T0.PriceList AND T1.WhsCode = T0.WhsCode
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [STUTTGART].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Tender sync Query exec DELETE FROM [LIVE_INTDB].dbo.AB_Tender INSERT INTO [LIVE_INTDB].dbo.AB_Tender(TenderCode,TenderName,TenderType,OpenDrawer,OverTender,Remark,Rounding,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_TenderType,U_AB_OpenDrawer,U_AB_OverTender,U_AB_Remark,U_AB_Rounding,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_TENDER] T0 
[10-27-2015 12:24:54][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:24:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:24:54][                        Main()] Completed with SUCCESS
[10-27-2015 12:26:19][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[STUTTGART]'
[10-27-2015 12:26:19][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:26:19][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:26:31][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:26:31][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [STUTTGART].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [STUTTGART].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[10-27-2015 12:26:31][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:26:31][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:26:35][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:26:35][      GetSystemIntializeInfo()] Completed with SUCCESS
[10-27-2015 12:26:39][                        Main()] Calling ConnectToTargetCompany()
[10-27-2015 12:26:40][      ConnectToTargetCompany()] Starting function
[10-27-2015 12:26:40][      ConnectToTargetCompany()] Initializing the Company Object
[10-27-2015 12:26:43][      ConnectToTargetCompany()] Assigning the representing database name
[10-27-2015 12:26:43][      ConnectToTargetCompany()] Connecting to the Company Database.
[10-27-2015 12:27:06][      ConnectToTargetCompany()] Completed with SUCCESS
[10-27-2015 12:27:12][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,POSPrinter,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], T0.U_POSPrinterName,T0.U_AB_POSSync, DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[10-27-2015 12:27:13][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:13][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:17][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.ItmsGrpCod,  EASIDept = T1.U_AB_EASIDept,ProductType = T1.ProductType,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice, POSPrinter = T1.U_POSPrinterName,POSSync = T1.U_AB_POSSync,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice],T0.U_POSPrinterName,T0.U_AB_POSSync  			FROM [STUTTGART].dbo.OITM T0 			INNER JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[10-27-2015 12:27:17][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:17][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:17][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:17][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM [STUTTGART].dbo.OITM)
[10-27-2015 12:27:17][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:17][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:17][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:17][                        Main()] Item Group Sync Query Exec DELETE FROM [LIVE_INTDB].dbo.AB_EASIDepartment INSERT INTO [LIVE_INTDB].dbo.AB_EASIDepartment(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_EASIDepartment) 
[10-27-2015 12:27:17][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:17][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:17][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:17][                        Main()] EASI Group Sync Query Exec  INSERT INTO [LIVE_INTDB].dbo.AB_EASIGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItmsGrpCod,T0.ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_EASIGROUP)
[10-27-2015 12:27:17][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:17][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:17][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:18][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_EASIGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_EASIGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [STUTTGART].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[10-27-2015 12:27:18][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:18][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(WhsCode,ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T5.WhsCode,T0.ItemCode,   CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList       ELSE T2.ListNum END [PriceList], CASE WHEN T0.UgpEntry = -1 THEN T2.ListName       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName       ELSE T4.ListName END [PriceListName], CASE WHEN T0.UgpEntry = -1 THEN T1.Currency       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency       ELSE T3.Currency END [Currency], CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList  LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1)  ORDER BY T0.ItemCode,T5.WhsCode 
[10-27-2015 12:27:18][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:18][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceList = T1.PriceList,PriceListName = T1.PriceListName,Currency = T1.Currency,Price = T1.Price,WhsCode = T1.WhsCode ,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T5.WhsCode,T0.ItemCode,             CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList              ELSE T2.ListNum END [PriceList],             CASE WHEN T0.UgpEntry = -1 THEN T2.ListName              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName              ELSE T4.ListName END [PriceListName],             CASE WHEN T0.UgpEntry = -1 THEN T1.Currency              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency              ELSE T3.Currency END [Currency], 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [STUTTGART].dbo.OITM T0 			LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry             LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList              LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.PriceList = T0.PriceList AND T1.WhsCode = T0.WhsCode
[10-27-2015 12:27:18][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:18][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[10-27-2015 12:27:18][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:18][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [STUTTGART].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[10-27-2015 12:27:18][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:18][                        Main()] Tender sync Query exec DELETE FROM [LIVE_INTDB].dbo.AB_Tender INSERT INTO [LIVE_INTDB].dbo.AB_Tender(TenderCode,TenderName,TenderType,OpenDrawer,OverTender,Remark,Rounding,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_TenderType,U_AB_OpenDrawer,U_AB_OverTender,U_AB_Remark,U_AB_Rounding,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_TENDER] T0 
[10-27-2015 12:27:18][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:27:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:27:18][                        Main()] Completed with SUCCESS
[10-27-2015 12:30:54][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[STUTTGART]'
[10-27-2015 12:30:54][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:30:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:30:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:30:54][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [STUTTGART].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [STUTTGART].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[10-27-2015 12:30:54][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:30:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:30:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:30:58][      GetSystemIntializeInfo()] Completed with SUCCESS
[10-27-2015 12:30:58][                        Main()] Calling ConnectToTargetCompany()
[10-27-2015 12:30:58][      ConnectToTargetCompany()] Starting function
[10-27-2015 12:30:58][      ConnectToTargetCompany()] Initializing the Company Object
[10-27-2015 12:30:58][      ConnectToTargetCompany()] Assigning the representing database name
[10-27-2015 12:30:58][      ConnectToTargetCompany()] Connecting to the Company Database.
[10-27-2015 12:31:03][      ConnectToTargetCompany()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,POSPrinter,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], T0.U_POSPrinterName,T0.U_AB_POSSync, DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.ItmsGrpCod,  EASIDept = T1.U_AB_EASIDept,ProductType = T1.ProductType,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice, POSPrinter = T1.U_POSPrinterName,POSSync = T1.U_AB_POSSync,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice],T0.U_POSPrinterName,T0.U_AB_POSSync  			FROM [STUTTGART].dbo.OITM T0 			INNER JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM [STUTTGART].dbo.OITM)
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Item Group Sync Query Exec DELETE FROM [LIVE_INTDB].dbo.AB_EASIDepartment INSERT INTO [LIVE_INTDB].dbo.AB_EASIDepartment(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_EASIDepartment) 
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] EASI Group Sync Query Exec  INSERT INTO [LIVE_INTDB].dbo.AB_EASIGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItmsGrpCod,T0.ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_EASIGROUP)
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_EASIGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_EASIGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [STUTTGART].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(WhsCode,ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T5.WhsCode,T0.ItemCode,   CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList       ELSE T2.ListNum END [PriceList], CASE WHEN T0.UgpEntry = -1 THEN T2.ListName       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName       ELSE T4.ListName END [PriceListName], CASE WHEN T0.UgpEntry = -1 THEN T1.Currency       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency       ELSE T3.Currency END [Currency], CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList  LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1)  ORDER BY T0.ItemCode,T5.WhsCode 
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceList = T1.PriceList,PriceListName = T1.PriceListName,Currency = T1.Currency,Price = T1.Price,WhsCode = T1.WhsCode ,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T5.WhsCode,T0.ItemCode,             CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList              ELSE T2.ListNum END [PriceList],             CASE WHEN T0.UgpEntry = -1 THEN T2.ListName              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName              ELSE T4.ListName END [PriceListName],             CASE WHEN T0.UgpEntry = -1 THEN T1.Currency              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency              ELSE T3.Currency END [Currency], 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [STUTTGART].dbo.OITM T0 			LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry             LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList              LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.PriceList = T0.PriceList AND T1.WhsCode = T0.WhsCode
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [STUTTGART].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Tender sync Query exec DELETE FROM [LIVE_INTDB].dbo.AB_Tender INSERT INTO [LIVE_INTDB].dbo.AB_Tender(TenderCode,TenderName,TenderType,OpenDrawer,OverTender,Remark,Rounding,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_TenderType,U_AB_OpenDrawer,U_AB_OverTender,U_AB_Remark,U_AB_Rounding,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_TENDER] T0 
[10-27-2015 12:31:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:31:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:31:03][                        Main()] Completed with SUCCESS
[10-27-2015 12:33:27][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[STUTTGART]'
[10-27-2015 12:33:27][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:27][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:27][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:27][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [STUTTGART].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [STUTTGART].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[10-27-2015 12:33:27][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:27][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:30][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:30][      GetSystemIntializeInfo()] Completed with SUCCESS
[10-27-2015 12:33:30][                        Main()] Calling ConnectToTargetCompany()
[10-27-2015 12:33:30][      ConnectToTargetCompany()] Starting function
[10-27-2015 12:33:30][      ConnectToTargetCompany()] Initializing the Company Object
[10-27-2015 12:33:31][      ConnectToTargetCompany()] Assigning the representing database name
[10-27-2015 12:33:31][      ConnectToTargetCompany()] Connecting to the Company Database.
[10-27-2015 12:33:35][      ConnectToTargetCompany()] Completed with SUCCESS
[10-27-2015 12:33:35][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,POSPrinter,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], T0.U_POSPrinterName,T0.U_AB_POSSync, DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[10-27-2015 12:33:35][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:35][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:35][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:35][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.ItmsGrpCod,  EASIDept = T1.U_AB_EASIDept,ProductType = T1.ProductType,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice, POSPrinter = T1.U_POSPrinterName,POSSync = T1.U_AB_POSSync,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice],T0.U_POSPrinterName,T0.U_AB_POSSync  			FROM [STUTTGART].dbo.OITM T0 			INNER JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[10-27-2015 12:33:35][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:35][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:35][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:35][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM [STUTTGART].dbo.OITM)
[10-27-2015 12:33:35][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:35][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:35][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:35][                        Main()] Item Group Sync Query Exec DELETE FROM [LIVE_INTDB].dbo.AB_EASIDepartment INSERT INTO [LIVE_INTDB].dbo.AB_EASIDepartment(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_EASIDEPT] T0 
[10-27-2015 12:33:35][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:35][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:35][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:35][                        Main()] EASI Group Sync Query Exec  INSERT INTO [LIVE_INTDB].dbo.AB_EASIGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItmsGrpCod,T0.ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_EASIGROUP)
[10-27-2015 12:33:35][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:35][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:36][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_EASIGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_EASIGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [STUTTGART].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[10-27-2015 12:33:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:36][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(WhsCode,ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T5.WhsCode,T0.ItemCode,   CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList       ELSE T2.ListNum END [PriceList], CASE WHEN T0.UgpEntry = -1 THEN T2.ListName       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName       ELSE T4.ListName END [PriceListName], CASE WHEN T0.UgpEntry = -1 THEN T1.Currency       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency       ELSE T3.Currency END [Currency], CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList  LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1)  ORDER BY T0.ItemCode,T5.WhsCode 
[10-27-2015 12:33:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:36][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceList = T1.PriceList,PriceListName = T1.PriceListName,Currency = T1.Currency,Price = T1.Price,WhsCode = T1.WhsCode ,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T5.WhsCode,T0.ItemCode,             CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList              ELSE T2.ListNum END [PriceList],             CASE WHEN T0.UgpEntry = -1 THEN T2.ListName              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName              ELSE T4.ListName END [PriceListName],             CASE WHEN T0.UgpEntry = -1 THEN T1.Currency              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency              ELSE T3.Currency END [Currency], 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [STUTTGART].dbo.OITM T0 			LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry             LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList              LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.PriceList = T0.PriceList AND T1.WhsCode = T0.WhsCode
[10-27-2015 12:33:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:36][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[10-27-2015 12:33:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:36][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [STUTTGART].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[10-27-2015 12:33:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:36][                        Main()] Tender sync Query exec DELETE FROM [LIVE_INTDB].dbo.AB_Tender INSERT INTO [LIVE_INTDB].dbo.AB_Tender(TenderCode,TenderName,TenderType,OpenDrawer,OverTender,Remark,Rounding,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_TenderType,U_AB_OpenDrawer,U_AB_OverTender,U_AB_Remark,U_AB_Rounding,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_TENDER] T0 
[10-27-2015 12:33:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:36][                        Main()] Completed with SUCCESS
[10-27-2015 12:33:57][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[STUTTGART]'
[10-27-2015 12:33:57][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:57][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:33:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:33:58][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [STUTTGART].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [STUTTGART].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[10-27-2015 12:33:58][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:33:58][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:01][      GetSystemIntializeInfo()] Completed with SUCCESS
[10-27-2015 12:34:01][                        Main()] Calling ConnectToTargetCompany()
[10-27-2015 12:34:01][      ConnectToTargetCompany()] Starting function
[10-27-2015 12:34:01][      ConnectToTargetCompany()] Initializing the Company Object
[10-27-2015 12:34:01][      ConnectToTargetCompany()] Assigning the representing database name
[10-27-2015 12:34:01][      ConnectToTargetCompany()] Connecting to the Company Database.
[10-27-2015 12:34:06][      ConnectToTargetCompany()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,POSPrinter,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], T0.U_POSPrinterName,T0.U_AB_POSSync, DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.ItmsGrpCod,  EASIDept = T1.U_AB_EASIDept,ProductType = T1.ProductType,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice, POSPrinter = T1.U_POSPrinterName,POSSync = T1.U_AB_POSSync,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice],T0.U_POSPrinterName,T0.U_AB_POSSync  			FROM [STUTTGART].dbo.OITM T0 			INNER JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM [STUTTGART].dbo.OITM)
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Item Group Sync Query Exec DELETE FROM [LIVE_INTDB].dbo.AB_EASIDepartment INSERT INTO [LIVE_INTDB].dbo.AB_EASIDepartment(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_EASIDEPT] T0 
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] EASI Group Sync Query Exec  INSERT INTO [LIVE_INTDB].dbo.AB_EASIGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItmsGrpCod,T0.ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_EASIGROUP)
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_EASIGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_EASIGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [STUTTGART].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(WhsCode,ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T5.WhsCode,T0.ItemCode,   CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList       ELSE T2.ListNum END [PriceList], CASE WHEN T0.UgpEntry = -1 THEN T2.ListName       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName       ELSE T4.ListName END [PriceListName], CASE WHEN T0.UgpEntry = -1 THEN T1.Currency       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency       ELSE T3.Currency END [Currency], CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList  LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1)  ORDER BY T0.ItemCode,T5.WhsCode 
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceList = T1.PriceList,PriceListName = T1.PriceListName,Currency = T1.Currency,Price = T1.Price,WhsCode = T1.WhsCode ,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T5.WhsCode,T0.ItemCode,             CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList              ELSE T2.ListNum END [PriceList],             CASE WHEN T0.UgpEntry = -1 THEN T2.ListName              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName              ELSE T4.ListName END [PriceListName],             CASE WHEN T0.UgpEntry = -1 THEN T1.Currency              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency              ELSE T3.Currency END [Currency], 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [STUTTGART].dbo.OITM T0 			LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry             LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList              LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.PriceList = T0.PriceList AND T1.WhsCode = T0.WhsCode
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [STUTTGART].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Tender sync Query exec DELETE FROM [LIVE_INTDB].dbo.AB_Tender INSERT INTO [LIVE_INTDB].dbo.AB_Tender(TenderCode,TenderName,TenderType,OpenDrawer,OverTender,Remark,Rounding,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_TenderType,U_AB_OpenDrawer,U_AB_OverTender,U_AB_Remark,U_AB_Rounding,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_TENDER] T0 
[10-27-2015 12:34:06][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:34:06][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:34:06][                        Main()] Completed with SUCCESS
[10-27-2015 12:38:29][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[STUTTGART]'
[10-27-2015 12:38:29][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:29][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:29][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:29][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [STUTTGART].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [STUTTGART].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[10-27-2015 12:38:29][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:29][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:32][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:32][      GetSystemIntializeInfo()] Completed with SUCCESS
[10-27-2015 12:38:32][                        Main()] Calling ConnectToTargetCompany()
[10-27-2015 12:38:32][      ConnectToTargetCompany()] Starting function
[10-27-2015 12:38:32][      ConnectToTargetCompany()] Initializing the Company Object
[10-27-2015 12:38:33][      ConnectToTargetCompany()] Assigning the representing database name
[10-27-2015 12:38:33][      ConnectToTargetCompany()] Connecting to the Company Database.
[10-27-2015 12:38:37][      ConnectToTargetCompany()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,POSPrinter,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], T0.U_POSPrinterName,T0.U_AB_POSSync, DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.ItmsGrpCod,  EASIDept = T1.U_AB_EASIDept,ProductType = T1.ProductType,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice, POSPrinter = T1.U_POSPrinterName,POSSync = T1.U_AB_POSSync,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice],T0.U_POSPrinterName,T0.U_AB_POSSync  			FROM [STUTTGART].dbo.OITM T0 			INNER JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM [STUTTGART].dbo.OITM)
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Item Group Sync Query Exec DELETE FROM [LIVE_INTDB].dbo.AB_EASIDepartment INSERT INTO [LIVE_INTDB].dbo.AB_EASIDepartment(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_EASIDEPT] T0 
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] EASI Group Sync Query Exec  INSERT INTO [LIVE_INTDB].dbo.AB_EASIGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItmsGrpCod,T0.ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_EASIGROUP)
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_EASIGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_EASIGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [STUTTGART].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(WhsCode,ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T5.WhsCode,T0.ItemCode,   CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList       ELSE T2.ListNum END [PriceList], CASE WHEN T0.UgpEntry = -1 THEN T2.ListName       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName       ELSE T4.ListName END [PriceListName], CASE WHEN T0.UgpEntry = -1 THEN T1.Currency       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency       ELSE T3.Currency END [Currency], CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList  LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1)  ORDER BY T0.ItemCode,T5.WhsCode 
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceList = T1.PriceList,PriceListName = T1.PriceListName,Currency = T1.Currency,Price = T1.Price,WhsCode = T1.WhsCode ,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T5.WhsCode,T0.ItemCode,             CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList              ELSE T2.ListNum END [PriceList],             CASE WHEN T0.UgpEntry = -1 THEN T2.ListName              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName              ELSE T4.ListName END [PriceListName],             CASE WHEN T0.UgpEntry = -1 THEN T1.Currency              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency              ELSE T3.Currency END [Currency], 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [STUTTGART].dbo.OITM T0 			LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry             LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList              LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.PriceList = T0.PriceList AND T1.WhsCode = T0.WhsCode
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [STUTTGART].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Tender sync Query exec DELETE FROM [LIVE_INTDB].dbo.AB_Tender INSERT INTO [LIVE_INTDB].dbo.AB_Tender(TenderCode,TenderName,TenderType,OpenDrawer,OverTender,Remark,Rounding,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_TenderType,U_AB_OpenDrawer,U_AB_OverTender,U_AB_Remark,U_AB_Rounding,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_TENDER] T0 
[10-27-2015 12:38:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:38:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:38:37][                        Main()] Completed with SUCCESS
[10-27-2015 12:42:28][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[STUTTGART]'
[10-27-2015 12:42:28][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:28][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:29][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:29][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [STUTTGART].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [STUTTGART].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[10-27-2015 12:42:29][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:29][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:31][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:31][      GetSystemIntializeInfo()] Completed with SUCCESS
[10-27-2015 12:42:32][                        Main()] Calling ConnectToTargetCompany()
[10-27-2015 12:42:32][      ConnectToTargetCompany()] Starting function
[10-27-2015 12:42:32][      ConnectToTargetCompany()] Initializing the Company Object
[10-27-2015 12:42:32][      ConnectToTargetCompany()] Assigning the representing database name
[10-27-2015 12:42:32][      ConnectToTargetCompany()] Connecting to the Company Database.
[10-27-2015 12:42:36][      ConnectToTargetCompany()] Completed with SUCCESS
[10-27-2015 12:42:36][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,POSPrinter,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], T0.U_POSPrinterName,T0.U_AB_POSSync, DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[10-27-2015 12:42:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:36][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.ItmsGrpCod,  EASIDept = T1.U_AB_EASIDept,ProductType = T1.ProductType,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice, POSPrinter = T1.U_POSPrinterName,POSSync = T1.U_AB_POSSync,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice],T0.U_POSPrinterName,T0.U_AB_POSSync  			FROM [STUTTGART].dbo.OITM T0 			INNER JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[10-27-2015 12:42:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:36][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM [STUTTGART].dbo.OITM)
[10-27-2015 12:42:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:36][                        Main()] Item Group Sync Query Exec DELETE FROM [LIVE_INTDB].dbo.AB_EASIDepartment INSERT INTO [LIVE_INTDB].dbo.AB_EASIDepartment(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_EASIDEPT] T0 
[10-27-2015 12:42:36][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:36][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:36][                        Main()] EASI Group Sync Query Exec  INSERT INTO [LIVE_INTDB].dbo.AB_EASIGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItmsGrpCod,T0.ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_EASIGROUP)
[10-27-2015 12:42:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:37][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_EASIGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_EASIGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [STUTTGART].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[10-27-2015 12:42:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:37][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(WhsCode,ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T5.WhsCode,T0.ItemCode,   CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList       ELSE T2.ListNum END [PriceList], CASE WHEN T0.UgpEntry = -1 THEN T2.ListName       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName       ELSE T4.ListName END [PriceListName], CASE WHEN T0.UgpEntry = -1 THEN T1.Currency       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency       ELSE T3.Currency END [Currency], CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList  LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1)  ORDER BY T0.ItemCode,T5.WhsCode 
[10-27-2015 12:42:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:37][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceList = T1.PriceList,PriceListName = T1.PriceListName,Currency = T1.Currency,Price = T1.Price,WhsCode = T1.WhsCode ,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T5.WhsCode,T0.ItemCode,             CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList              ELSE T2.ListNum END [PriceList],             CASE WHEN T0.UgpEntry = -1 THEN T2.ListName              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName              ELSE T4.ListName END [PriceListName],             CASE WHEN T0.UgpEntry = -1 THEN T1.Currency              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency              ELSE T3.Currency END [Currency], 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [STUTTGART].dbo.OITM T0 			LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry             LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList              LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.PriceList = T0.PriceList AND T1.WhsCode = T0.WhsCode
[10-27-2015 12:42:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:37][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[10-27-2015 12:42:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:37][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [STUTTGART].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[10-27-2015 12:42:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:37][                        Main()] Tender sync Query exec DELETE FROM [LIVE_INTDB].dbo.AB_Tender INSERT INTO [LIVE_INTDB].dbo.AB_Tender(TenderCode,TenderName,TenderType,OpenDrawer,OverTender,Remark,Rounding,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_TenderType,U_AB_OpenDrawer,U_AB_OverTender,U_AB_Remark,U_AB_Rounding,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_TENDER] T0 
[10-27-2015 12:42:37][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:42:37][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:42:37][                        Main()] Completed with SUCCESS
[10-27-2015 12:44:54][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[STUTTGART]'
[10-27-2015 12:44:54][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:44:54][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:44:55][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:44:55][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [STUTTGART].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [STUTTGART].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[10-27-2015 12:44:55][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:44:55][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:44:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:44:58][      GetSystemIntializeInfo()] Completed with SUCCESS
[10-27-2015 12:44:58][                        Main()] Calling ConnectToTargetCompany()
[10-27-2015 12:44:58][      ConnectToTargetCompany()] Starting function
[10-27-2015 12:44:58][      ConnectToTargetCompany()] Initializing the Company Object
[10-27-2015 12:44:58][      ConnectToTargetCompany()] Assigning the representing database name
[10-27-2015 12:44:58][      ConnectToTargetCompany()] Connecting to the Company Database.
[10-27-2015 12:45:02][      ConnectToTargetCompany()] Completed with SUCCESS
[10-27-2015 12:45:02][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,POSPrinter,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], T0.U_POSPrinterName,T0.U_AB_POSSync, DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[10-27-2015 12:45:02][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:02][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.ItmsGrpCod,  EASIDept = T1.U_AB_EASIDept,ProductType = T1.ProductType,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice, POSPrinter = T1.U_POSPrinterName,POSSync = T1.U_AB_POSSync,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice],T0.U_POSPrinterName,T0.U_AB_POSSync  			FROM [STUTTGART].dbo.OITM T0 			INNER JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[10-27-2015 12:45:02][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:02][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM [STUTTGART].dbo.OITM)
[10-27-2015 12:45:02][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:02][                        Main()] Item Group Sync Query Exec DELETE FROM [LIVE_INTDB].dbo.AB_EASIDepartment INSERT INTO [LIVE_INTDB].dbo.AB_EASIDepartment(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_EASIDEPT] T0 
[10-27-2015 12:45:02][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:02][                        Main()] EASI Group Sync Query Exec  INSERT INTO [LIVE_INTDB].dbo.AB_EASIGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItmsGrpCod,T0.ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_EASIGROUP)
[10-27-2015 12:45:02][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:02][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_EASIGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_EASIGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [STUTTGART].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[10-27-2015 12:45:02][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:02][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(WhsCode,ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T5.WhsCode,T0.ItemCode,   CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList       ELSE T2.ListNum END [PriceList], CASE WHEN T0.UgpEntry = -1 THEN T2.ListName       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName       ELSE T4.ListName END [PriceListName], CASE WHEN T0.UgpEntry = -1 THEN T1.Currency       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency       ELSE T3.Currency END [Currency], CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList  LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1)  ORDER BY T0.ItemCode,T5.WhsCode 
[10-27-2015 12:45:02][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:02][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceList = T1.PriceList,PriceListName = T1.PriceListName,Currency = T1.Currency,Price = T1.Price,WhsCode = T1.WhsCode ,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T5.WhsCode,T0.ItemCode,             CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList              ELSE T2.ListNum END [PriceList],             CASE WHEN T0.UgpEntry = -1 THEN T2.ListName              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName              ELSE T4.ListName END [PriceListName],             CASE WHEN T0.UgpEntry = -1 THEN T1.Currency              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency              ELSE T3.Currency END [Currency], 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [STUTTGART].dbo.OITM T0 			LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry             LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList              LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.PriceList = T0.PriceList AND T1.WhsCode = T0.WhsCode
[10-27-2015 12:45:02][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:02][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[10-27-2015 12:45:02][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:03][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [STUTTGART].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[10-27-2015 12:45:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:03][                        Main()] Tender sync Query exec DELETE FROM [LIVE_INTDB].dbo.AB_Tender INSERT INTO [LIVE_INTDB].dbo.AB_Tender(TenderCode,TenderName,TenderType,OpenDrawer,OverTender,Remark,Rounding,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_TenderType,U_AB_OpenDrawer,U_AB_OverTender,U_AB_Remark,U_AB_Rounding,U_AB_POSSync,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_TENDER] T0 
[10-27-2015 12:45:03][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:03][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:03][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:03][                        Main()] Completed with SUCCESS
[10-27-2015 12:45:40][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[STUTTGART]'
[10-27-2015 12:45:40][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:40][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:40][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [STUTTGART].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [STUTTGART].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[10-27-2015 12:45:40][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:40][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:43][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:43][      GetSystemIntializeInfo()] Completed with SUCCESS
[10-27-2015 12:45:43][                        Main()] Calling ConnectToTargetCompany()
[10-27-2015 12:45:43][      ConnectToTargetCompany()] Starting function
[10-27-2015 12:45:43][      ConnectToTargetCompany()] Initializing the Company Object
[10-27-2015 12:45:43][      ConnectToTargetCompany()] Assigning the representing database name
[10-27-2015 12:45:43][      ConnectToTargetCompany()] Connecting to the Company Database.
[10-27-2015 12:45:47][      ConnectToTargetCompany()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,POSPrinter,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], T0.U_POSPrinterName,T0.U_AB_POSSync, DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.ItmsGrpCod,  EASIDept = T1.U_AB_EASIDept,ProductType = T1.ProductType,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice, POSPrinter = T1.U_POSPrinterName,POSSync = T1.U_AB_POSSync,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T0.ItmsGrpCod,T0.U_AB_EASIDept, 'SS' [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 1 ELSE 0 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice],T0.U_POSPrinterName,T0.U_AB_POSSync  			FROM [STUTTGART].dbo.OITM T0 			INNER JOIN [STUTTGART].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM [STUTTGART].dbo.OITM)
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Item Group Sync Query Exec DELETE FROM [LIVE_INTDB].dbo.AB_EASIDepartment INSERT INTO [LIVE_INTDB].dbo.AB_EASIDepartment(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_EASIDEPT] T0 
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] EASI Group Sync Query Exec  INSERT INTO [LIVE_INTDB].dbo.AB_EASIGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItmsGrpCod,T0.ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_EASIGROUP)
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_EASIGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_EASIGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [STUTTGART].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(WhsCode,ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T5.WhsCode,T0.ItemCode,   CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList       ELSE T2.ListNum END [PriceList], CASE WHEN T0.UgpEntry = -1 THEN T2.ListName       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName       ELSE T4.ListName END [PriceListName], CASE WHEN T0.UgpEntry = -1 THEN T1.Currency       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency       ELSE T3.Currency END [Currency], CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.OITM T0  LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList  LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1)  ORDER BY T0.ItemCode,T5.WhsCode 
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceList = T1.PriceList,PriceListName = T1.PriceListName,Currency = T1.Currency,Price = T1.Price,WhsCode = T1.WhsCode ,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T5.WhsCode,T0.ItemCode,             CASE WHEN T0.UgpEntry = -1 THEN T1.PriceList              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.PriceList              ELSE T2.ListNum END [PriceList],             CASE WHEN T0.UgpEntry = -1 THEN T2.ListName              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T2.ListName              ELSE T4.ListName END [PriceListName],             CASE WHEN T0.UgpEntry = -1 THEN T1.Currency              WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Currency              ELSE T3.Currency END [Currency], 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [STUTTGART].dbo.OITM T0 			LEFT JOIN [STUTTGART].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [STUTTGART].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [STUTTGART].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry             LEFT JOIN [STUTTGART].dbo.OPLN T4 ON T4.ListNum = T3.PriceList              LEFT JOIN [STUTTGART].dbo.OITW T5 ON T5.ItemCode = T0.ItemCode  			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.PriceList = T0.PriceList AND T1.WhsCode = T0.WhsCode
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [STUTTGART].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [STUTTGART].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Tender sync Query exec DELETE FROM [LIVE_INTDB].dbo.AB_Tender INSERT INTO [LIVE_INTDB].dbo.AB_Tender(TenderCode,TenderName,TenderType,OpenDrawer,OverTender,Remark,Rounding,POSSync,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_TenderType,U_AB_OpenDrawer,U_AB_OverTender,U_AB_Remark,U_AB_Rounding,U_AB_POSSync,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [STUTTGART].dbo.[@AB_TENDER] T0 
[10-27-2015 12:45:47][                        Main()] Calling ExecuteSQLQuery_DT()
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Starting function
[10-27-2015 12:45:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[10-27-2015 12:45:47][                        Main()] Completed with SUCCESS
