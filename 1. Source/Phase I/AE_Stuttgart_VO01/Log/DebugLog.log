[09-21-2015 08:08:34][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:08:34][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:08:34][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:08:34][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:08:34][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:08:34][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:08:34][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:08:39][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:08:39][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:08:39][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:08:39][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:08:39][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:08:39][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:08:39][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:09:08][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:09:08][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:09:08][         IntegrityValidation()] Starting Function
[09-21-2015 08:09:08][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:09:08][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:09:08][         IntegrityValidation()] Date Time 21-09-2015 08:09 AM
[09-21-2015 08:09:08][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:09:08][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:09:08][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:09:08][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:09:08][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:09:08][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:09:08][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:09:08][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:09:08][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:09:08][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:09:08][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:09:09][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:09:09][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:09:16][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:09:23][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:09:26][                  Salesorder()] Starting Function
[09-21-2015 08:09:26][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:09:29][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:09:29][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:09:29][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:09:48][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:09:51][                  Salesorder()] Releasing the Objects
[09-21-2015 08:09:55][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:09:58][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:09:58][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:09:58][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:09:59][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:10:00][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:10:08][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:10:11][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:10:11][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:10:11][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:10:11][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:13][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7204
[09-21-2015 08:10:13][         IntegrityValidation()] Validation Fails TransID 7204
[09-21-2015 08:10:13][         IntegrityValidation()] Date Time 21-09-2015 08:10 AM
[09-21-2015 08:10:13][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '7204'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '7204'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'AR Invoice Total not equal to Payment Total.'  WHERE [HeaderID] = '7204' and [ItemCode] = 'Test01' 
[09-21-2015 08:10:13][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:10:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:14][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:14][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 08:10:14][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 08:10:14][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:14][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:15][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:16][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 08:10:16][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:16][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:16][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:16][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 08:10:16][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:16][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:16][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:16][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 08:10:16][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:16][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:16][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:16][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 08:10:16][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:16][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:17][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:17][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 08:10:17][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:17][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:17][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:17][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 08:10:17][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:17][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:17][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:17][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 08:10:18][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:18][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:20][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 08:10:20][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:20][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 08:10:20][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:10:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:10:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:10:20][                        Main()] Completed with SUCCESS
[09-21-2015 08:11:12][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:11:12][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:11:12][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:11:12][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:11:12][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:11:12][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:11:12][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:11:43][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:11:43][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:11:43][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:11:44][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:11:44][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:11:44][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:11:44][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:11:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:11:47][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:11:47][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:11:47][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:11:47][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:11:48][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:11:48][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:11:56][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:11:56][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:11:56][         IntegrityValidation()] Starting Function
[09-21-2015 08:11:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:11:56][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:11:56][         IntegrityValidation()] Date Time 21-09-2015 08:11 AM
[09-21-2015 08:11:56][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:11:56][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:11:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:11:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:11:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:11:56][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:11:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:11:56][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:11:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:11:56][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:11:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:11:56][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:11:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:11:58][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:12:03][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:12:07][                  Salesorder()] Starting Function
[09-21-2015 08:12:07][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:12:13][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:12:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:12:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:12:21][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:12:25][                  Salesorder()] Releasing the Objects
[09-21-2015 08:12:29][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:12:50][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:13:17][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:13:20][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:13:56][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:13:56][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:13:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:13:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:13:56][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:13:56][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:13:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:13:59][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:13:59][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:13:59][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:13:59][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:13:59][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:14:00][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:14:00][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:14:09][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:14:09][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:14:09][         IntegrityValidation()] Starting Function
[09-21-2015 08:14:09][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:14:09][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:14:09][         IntegrityValidation()] Date Time 21-09-2015 08:14 AM
[09-21-2015 08:14:09][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:14:09][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:14:09][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:14:09][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:14:09][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:14:10][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:14:10][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:14:10][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:14:10][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:14:10][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:14:10][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:14:10][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:14:10][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:14:13][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:14:15][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:14:17][                  Salesorder()] Starting Function
[09-21-2015 08:14:17][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:14:19][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:14:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:14:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:14:24][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:14:26][                  Salesorder()] Releasing the Objects
[09-21-2015 08:15:26][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:15:26][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:15:26][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:15:26][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:15:26][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:15:26][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:15:26][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:15:26][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:15:26][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:15:26][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:15:26][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:15:26][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:15:26][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7204
[09-21-2015 08:15:26][         IntegrityValidation()] Validation Fails TransID 7204
[09-21-2015 08:15:26][         IntegrityValidation()] Date Time 21-09-2015 08:15 AM
[09-21-2015 08:15:26][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '7204'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '7204'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'AR Invoice Total not equal to Payment Total.'  WHERE [HeaderID] = '7204' and [ItemCode] = 'Test01' 
[09-21-2015 08:15:26][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:15:26][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:15:26][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:15:26][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 08:15:27][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 08:15:27][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:15:27][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:15:27][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:15:27][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 08:15:36][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:15:36][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:15:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:15:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:15:36][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:15:36][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:15:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:15:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:15:40][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:15:40][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:15:40][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:15:40][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:15:40][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:15:40][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:15:47][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:15:47][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:15:47][         IntegrityValidation()] Starting Function
[09-21-2015 08:15:47][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:15:51][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:15:51][         IntegrityValidation()] Date Time 21-09-2015 08:15 AM
[09-21-2015 08:15:51][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:15:51][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:15:51][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:15:52][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:15:52][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:15:56][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:15:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:15:59][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:15:59][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:16:01][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:16:01][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:16:12][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:16:12][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:16:18][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:16:26][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:16:35][                  Salesorder()] Starting Function
[09-21-2015 08:16:35][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:16:36][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:16:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:16:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:16:37][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:16:37][                  Salesorder()] Releasing the Objects
[09-21-2015 08:16:40][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:16:46][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:16:46][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:16:46][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:16:46][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:16:54][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:17:17][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:17:19][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:17:19][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:17:19][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:17:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:19][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7204
[09-21-2015 08:17:31][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:17:31][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:31][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:31][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:31][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:17:31][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:31][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:34][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:34][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:17:34][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:17:34][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:17:34][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:17:35][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:17:35][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:17:40][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:17:40][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:17:40][         IntegrityValidation()] Starting Function
[09-21-2015 08:17:40][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:17:42][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:17:42][         IntegrityValidation()] Date Time 21-09-2015 08:17 AM
[09-21-2015 08:17:42][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:17:42][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:17:42][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:42][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:42][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:17:42][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:17:42][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:17:43][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:17:43][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:17:44][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:17:44][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:17:44][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:17:44][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:17:45][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:17:46][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:17:47][                  Salesorder()] Starting Function
[09-21-2015 08:17:47][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:17:47][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:47][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:47][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:49][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:17:49][                  Salesorder()] Releasing the Objects
[09-21-2015 08:17:50][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:17:50][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:17:50][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:17:50][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:17:50][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:17:51][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:17:51][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:17:51][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:17:51][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:17:51][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:17:52][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:52][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:52][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7204
[09-21-2015 08:17:57][         IntegrityValidation()] Validation Fails TransID 7204
[09-21-2015 08:17:57][         IntegrityValidation()] Date Time 21-09-2015 08:17 AM
[09-21-2015 08:17:57][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '7204'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '7204'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'AR Invoice Total not equal to Payment Total.'  WHERE [HeaderID] = '7204' and [ItemCode] = 'Test01' 
[09-21-2015 08:17:57][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:17:57][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 08:17:58][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 08:17:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:17:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:17:58][                        Main()] Completed with SUCCESS
[09-21-2015 08:20:53][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:20:53][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:20:53][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:20:53][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:20:53][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:20:53][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:20:53][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:20:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:20:57][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:20:57][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:20:57][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:20:57][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:20:57][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:20:57][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:21:02][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:21:02][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:21:02][         IntegrityValidation()] Starting Function
[09-21-2015 08:21:02][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:21:03][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:21:03][         IntegrityValidation()] Date Time 21-09-2015 08:21 AM
[09-21-2015 08:21:03][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:21:03][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:21:03][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:21:04][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:21:04][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:21:04][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:21:04][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:21:04][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:21:04][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:21:04][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:21:04][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:21:05][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:21:05][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:21:05][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:21:06][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:21:06][                  Salesorder()] Starting Function
[09-21-2015 08:21:06][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:21:07][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:21:07][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:21:07][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:21:08][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:21:08][                  Salesorder()] Releasing the Objects
[09-21-2015 08:21:09][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:21:09][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:21:09][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:21:09][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:21:09][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:21:10][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:21:10][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:21:10][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:21:10][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:21:10][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:21:10][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:21:10][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:21:10][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7204
[09-21-2015 08:21:16][         IntegrityValidation()] Validation SUCCESS TransID 7204
[09-21-2015 08:21:16][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:21:18][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:21:24][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:21:25][                  Salesorder()] Starting Function
[09-21-2015 08:21:25][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '230'
[09-21-2015 08:21:28][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:21:28][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:21:28][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:21:36][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:21:36][                  Salesorder()] Releasing the Objects
[09-21-2015 08:21:38][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:21:39][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:21:39][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode  from RDR1 T0 where t0.DocEntry = '230'
[09-21-2015 08:21:39][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:21:39][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:22:00][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:22:00][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:22:00][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:22:00][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:22:00][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:22:00][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:01][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:22:01][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:01][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 08:22:01][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 08:22:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:01][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 08:22:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:01][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 08:22:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:01][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 08:22:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:01][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 08:22:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:01][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 08:22:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:01][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 08:22:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:02][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 08:22:02][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:02][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:02][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 08:22:02][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:02][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:02][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 08:22:02][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:22:02][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:22:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:22:02][                        Main()] Completed with SUCCESS
[09-21-2015 08:25:03][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:25:03][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:25:03][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:25:04][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:25:04][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:25:04][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:25:04][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:25:08][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:25:08][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:25:08][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:25:08][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:25:08][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:25:08][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:25:08][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:25:13][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:25:13][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:25:13][         IntegrityValidation()] Starting Function
[09-21-2015 08:25:13][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:25:15][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:25:15][         IntegrityValidation()] Date Time 21-09-2015 08:25 AM
[09-21-2015 08:25:15][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:25:15][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:25:15][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:25:15][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:25:15][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:25:16][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:25:16][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:25:16][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:25:16][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:25:16][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:25:16][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:25:16][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:25:16][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:25:17][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:25:17][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:25:18][                  Salesorder()] Starting Function
[09-21-2015 08:25:18][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:25:19][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:25:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:25:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:25:20][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:25:20][                  Salesorder()] Releasing the Objects
[09-21-2015 08:25:21][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:25:21][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:25:21][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:25:21][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:25:21][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:25:22][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:25:22][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:25:22][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:25:22][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:25:22][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:25:22][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:25:22][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:25:22][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7204
[09-21-2015 08:25:29][         IntegrityValidation()] Validation SUCCESS TransID 7204
[09-21-2015 08:25:29][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:25:30][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:25:37][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:25:44][                  Salesorder()] Starting Function
[09-21-2015 08:25:44][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '230'
[09-21-2015 08:25:46][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:25:46][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:25:46][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:25:47][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:25:47][                  Salesorder()] Releasing the Objects
[09-21-2015 08:25:51][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:26:03][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:26:03][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '230'
[09-21-2015 08:26:05][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:26:45][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:26:53][          AR_InvoiceCreation()] Draft Added Successfully  12656
[09-21-2015 08:26:56][          AR_InvoiceCreation()] Draft Details SQL SELECT T0.[LineNum], T0.[ItemCode], T0.[Quantity], T0.[WhsCode], T1.[ManBtchNum] FROM DRF1 T0  INNER JOIN OITM T1 ON T0.[ItemCode] = T1.[ItemCode] WHERE T0.[DocEntry] = '12656'
[09-21-2015 08:26:56][          AR_InvoiceCreation()] Calculating Rounding Amount: -53.5
[09-21-2015 08:26:56][          AR_InvoiceCreation()] Attempting Update the AR Invoice Draft with Batch Information
[09-21-2015 08:26:57][          AR_InvoiceCreation()] Completed with ERROR (Update AR Invoice Draft) 
[09-21-2015 08:26:57][          AR_InvoiceCreation()] Completed with SUCCESS (Update AR Invoice Draft) 
[09-21-2015 08:26:57][          AR_InvoiceCreation()] Attempting to Convert as a AR Invoice Document 
[09-21-2015 08:26:57][          AR_InvoiceCreation()] Completed with ERROR
[09-21-2015 08:26:57][          AR_InvoiceCreation()] Rollback the SAP Transaction 
[09-21-2015 08:26:57][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:26:57][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:26:57][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:26:57][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:26:57][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:57][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:57][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:26:57][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:26:57][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 08:26:58][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 08:26:58][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:26:58][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:26:58][                        Main()] Completed with SUCCESS
[09-21-2015 08:27:23][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:27:24][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:27:24][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:27:24][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:27:24][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:27:24][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:27:24][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:27:27][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:27:27][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:27:27][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:27:27][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:27:27][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:27:27][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:27:27][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:27:32][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:27:32][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:27:32][         IntegrityValidation()] Starting Function
[09-21-2015 08:27:32][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:27:35][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:27:35][         IntegrityValidation()] Date Time 21-09-2015 08:27 AM
[09-21-2015 08:27:35][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:27:35][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:27:35][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:27:35][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:27:35][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:27:35][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:27:35][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:27:36][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:27:36][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:27:36][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:27:36][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:27:37][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:27:37][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:27:37][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:27:38][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:27:38][                  Salesorder()] Starting Function
[09-21-2015 08:27:38][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:27:39][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:27:39][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:27:39][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:27:40][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:27:40][                  Salesorder()] Releasing the Objects
[09-21-2015 08:27:41][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:27:42][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:27:42][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:27:42][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:27:42][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:27:43][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:27:43][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:27:43][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:27:43][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:27:43][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:27:43][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:27:43][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:27:43][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7204
[09-21-2015 08:27:48][         IntegrityValidation()] Validation SUCCESS TransID 7204
[09-21-2015 08:27:48][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:27:49][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:27:50][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:27:51][                  Salesorder()] Starting Function
[09-21-2015 08:27:51][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '230'
[09-21-2015 08:27:52][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:27:52][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:27:52][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:27:53][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:27:53][                  Salesorder()] Releasing the Objects
[09-21-2015 08:27:57][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:28:02][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:28:02][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '230'
[09-21-2015 08:28:02][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:28:02][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:28:07][          AR_InvoiceCreation()] Draft Added Successfully  12656
[09-21-2015 08:28:12][          AR_InvoiceCreation()] Draft Details SQL SELECT T0.[LineNum], T0.[ItemCode], T0.[Quantity], T0.[WhsCode], T1.[ManBtchNum] FROM DRF1 T0  INNER JOIN OITM T1 ON T0.[ItemCode] = T1.[ItemCode] WHERE T0.[DocEntry] = '12656'
[09-21-2015 08:28:29][          AR_InvoiceCreation()] Calculating Rounding Amount: -53.5
[09-21-2015 08:28:38][          AR_InvoiceCreation()] Attempting Update the AR Invoice Draft with Batch Information
[09-21-2015 08:28:45][          AR_InvoiceCreation()] Completed with ERROR (Update AR Invoice Draft) 
[09-21-2015 08:28:53][          AR_InvoiceCreation()] Completed with SUCCESS (Update AR Invoice Draft) 
[09-21-2015 08:28:53][          AR_InvoiceCreation()] Attempting to Convert as a AR Invoice Document 
[09-21-2015 08:30:03][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:30:03][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:30:03][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:30:04][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:30:04][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:30:04][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:30:04][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:30:07][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:30:07][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:30:07][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:30:07][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:30:07][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:30:07][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:30:07][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:30:12][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:30:12][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:30:12][         IntegrityValidation()] Starting Function
[09-21-2015 08:30:12][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:30:15][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:30:15][         IntegrityValidation()] Date Time 21-09-2015 08:30 AM
[09-21-2015 08:30:15][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:30:15][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:30:15][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:30:15][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:30:15][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:30:15][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:30:15][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:30:15][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:30:15][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:30:16][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:30:16][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:30:16][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:30:16][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:30:17][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:30:17][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:30:17][                  Salesorder()] Starting Function
[09-21-2015 08:30:17][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:30:18][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:30:18][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:30:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:30:19][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:30:19][                  Salesorder()] Releasing the Objects
[09-21-2015 08:30:20][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:30:20][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:30:20][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:30:20][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:30:20][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:30:20][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:30:20][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:30:20][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:30:20][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:30:20][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:30:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:30:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:30:21][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7204
[09-21-2015 08:30:22][         IntegrityValidation()] Validation SUCCESS TransID 7204
[09-21-2015 08:30:22][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:30:23][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:30:24][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:30:25][                  Salesorder()] Starting Function
[09-21-2015 08:30:25][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '230'
[09-21-2015 08:30:26][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:30:26][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:30:26][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:30:28][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:30:28][                  Salesorder()] Releasing the Objects
[09-21-2015 08:30:30][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:30:30][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:30:30][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '230'
[09-21-2015 08:30:30][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:30:30][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:30:38][          AR_InvoiceCreation()] Draft Added Successfully  12656
[09-21-2015 08:31:14][          AR_InvoiceCreation()] Draft Details SQL SELECT T0.[LineNum], T0.[ItemCode], T0.[Quantity], T0.[WhsCode], T1.[ManBtchNum] FROM DRF1 T0  INNER JOIN OITM T1 ON T0.[ItemCode] = T1.[ItemCode] WHERE T0.[DocEntry] = '12656'
[09-21-2015 08:31:59][          AR_InvoiceCreation()] Calculating Rounding Amount: -53.5
[09-21-2015 08:32:23][          AR_InvoiceCreation()] Attempting Update the AR Invoice Draft with Batch Information
[09-21-2015 08:32:41][          AR_InvoiceCreation()] Completed with ERROR (Update AR Invoice Draft) 
[09-21-2015 08:32:44][          AR_InvoiceCreation()] Completed with SUCCESS (Update AR Invoice Draft) 
[09-21-2015 08:32:45][          AR_InvoiceCreation()] Attempting to Convert as a AR Invoice Document 
[09-21-2015 08:37:23][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:37:23][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:37:23][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:37:24][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:37:24][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:37:24][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:37:24][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:37:26][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:37:26][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:37:26][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:37:26][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:37:26][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:37:27][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:37:27][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:37:32][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:37:32][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:37:32][         IntegrityValidation()] Starting Function
[09-21-2015 08:37:32][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:37:35][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:37:35][         IntegrityValidation()] Date Time 21-09-2015 08:37 AM
[09-21-2015 08:37:35][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:37:35][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:37:35][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:37:35][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:37:35][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:37:36][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:37:36][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:37:36][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:37:36][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:37:37][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:37:37][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7203
[09-21-2015 08:37:37][         IntegrityValidation()] Validation SUCCESS TransID 7203
[09-21-2015 08:37:37][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:37:38][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:37:39][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:37:39][                  Salesorder()] Starting Function
[09-21-2015 08:37:39][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '229'
[09-21-2015 08:37:40][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:37:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:37:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:37:42][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:37:42][                  Salesorder()] Releasing the Objects
[09-21-2015 08:37:43][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:37:43][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:37:43][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '229'
[09-21-2015 08:37:43][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:37:43][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:37:45][          AR_InvoiceCreation()] Completed with ERROR 
[09-21-2015 08:37:45][     MarketingDocuments_Sync()] Completed with ERROR
[09-21-2015 08:37:45][     MarketingDocuments_Sync()] Rollback the SAP Transaction 
[09-21-2015 08:37:45][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:37:45][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:37:45][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:37:45][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:37:45][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7204
[09-21-2015 08:37:52][         IntegrityValidation()] Validation SUCCESS TransID 7204
[09-21-2015 08:37:52][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:37:54][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:37:55][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:37:56][                  Salesorder()] Starting Function
[09-21-2015 08:37:56][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '230'
[09-21-2015 08:37:57][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:37:57][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:37:57][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:37:59][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:37:59][                  Salesorder()] Releasing the Objects
[09-21-2015 08:38:01][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:38:01][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:38:01][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '230'
[09-21-2015 08:38:01][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:38:01][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:40:48][          AR_InvoiceCreation()] Draft Added Successfully  12656
[09-21-2015 08:41:02][          AR_InvoiceCreation()] Draft Details SQL SELECT T0.[LineNum], T0.[ItemCode], T0.[Quantity], T0.[WhsCode], T1.[ManBtchNum] FROM DRF1 T0  INNER JOIN OITM T1 ON T0.[ItemCode] = T1.[ItemCode] WHERE T0.[DocEntry] = '12656'
[09-21-2015 08:41:15][          AR_InvoiceCreation()] Calculating Rounding Amount: -53.5
[09-21-2015 08:41:19][          AR_InvoiceCreation()] Attempting Update the AR Invoice Draft with Batch Information
[09-21-2015 08:41:24][          AR_InvoiceCreation()] Completed with ERROR (Update AR Invoice Draft) 
[09-21-2015 08:41:27][          AR_InvoiceCreation()] Completed with SUCCESS (Update AR Invoice Draft) 
[09-21-2015 08:41:27][          AR_InvoiceCreation()] Attempting to Convert as a AR Invoice Document 
[09-21-2015 08:41:29][          AR_InvoiceCreation()] Completed with SUCCESS (Convert as a AR Invoice Document) 28745
[09-21-2015 08:41:29][          AR_InvoiceCreation()] Attempting to Remove te Draft 
[09-21-2015 08:41:29][          AR_InvoiceCreation()] Completed with SUCCESS
[09-21-2015 08:41:29][     MarketingDocuments_Sync()] Calling Funcion AR_IncomingPayment() : AR Invoice DocEntry 28745
[09-21-2015 08:41:29][            AR_IncomingPayment] Starting Function
[09-21-2015 08:41:29][            AR_IncomingPayment] Amount : 3.21
[09-21-2015 08:41:29][            AR_IncomingPayment] Attempting to Add  
[09-21-2015 08:41:55][            AR_IncomingPayment] Completed with SUCCESS.
[09-21-2015 08:41:55][            AR_IncomingPayment] Releasing the Objects
[09-21-2015 08:41:55][     MarketingDocuments_Sync()] Date Time 21-09-2015 08:41 AM
[09-21-2015 08:41:55][     MarketingDocuments_Sync()] Validation Update SQL UPDATE LIVE_INTDB.. [AB_SalesTransHeader]SET [Status] = 'SUCCESS' ,[ErrorMsg] = '' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE(), [ARDocEntry] = '28745' WHERE [ID] = '7204'UPDATE LIVE_INTDB.. [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '7204'
[09-21-2015 08:41:55][     MarketingDocuments_Sync()] Executing Query
[09-21-2015 08:41:55][     MarketingDocuments_Sync()] Committed the Transaction Reference POSNumber : B034860
[09-21-2015 08:41:55][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:41:55][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:41:55][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:55][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:55][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:41:55][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:41:55][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 08:41:56][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 08:41:56][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:41:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:41:56][                        Main()] Completed with SUCCESS
[09-21-2015 08:53:44][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:53:44][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:53:44][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:53:45][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:53:45][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:53:45][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:53:45][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:53:48][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:53:48][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:53:48][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:53:48][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:53:48][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:53:48][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:53:48][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:53:54][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:53:54][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:53:54][         IntegrityValidation()] Starting Function
[09-21-2015 08:53:54][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:53:54][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:53:54][         IntegrityValidation()] Date Time 21-09-2015 08:53 AM
[09-21-2015 08:53:54][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:53:54][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:53:55][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:53:56][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:53:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:53:56][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:53:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:53:56][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:53:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:53:56][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:53:56][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7205
[09-21-2015 08:53:56][         IntegrityValidation()] Validation Fails TransID 7205
[09-21-2015 08:53:56][         IntegrityValidation()] Date Time 21-09-2015 08:53 AM
[09-21-2015 08:53:57][         IntegrityValidation()] Date Time 21-09-2015 08:53 AM
[09-21-2015 08:53:57][         IntegrityValidation()] Date Time 21-09-2015 08:53 AM
[09-21-2015 08:53:57][         IntegrityValidation()] Date Time 21-09-2015 08:53 AM
[09-21-2015 08:53:57][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '7205'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '7205'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'AR Invoice Total not equal to Payment Total.'  WHERE [HeaderID] = '7205' and [ItemCode] = 'Test01' 
[09-21-2015 08:53:57][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:53:57][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:53:59][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:53:59][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '7205'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '7205'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'AR Invoice Total not equal to Payment Total.'  WHERE [HeaderID] = '7205' and [ItemCode] = 'Test01' 
[09-21-2015 08:53:59][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:53:59][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:00][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:00][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 08:54:00][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 08:54:00][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:00][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:00][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:00][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 08:54:00][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:00][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:01][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 08:54:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:01][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 08:54:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:01][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 08:54:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:01][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 08:54:01][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:02][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 08:54:02][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:02][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:02][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 08:54:02][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:02][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:02][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 08:54:02][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:02][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:02][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 08:54:02][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:54:02][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:54:02][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:54:02][                        Main()] Completed with SUCCESS
[09-21-2015 08:55:18][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 08:55:18][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:18][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:19][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 08:55:19][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:22][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:22][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 08:55:22][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 08:55:22][      ConnectToTargetCompany()] Starting function
[09-21-2015 08:55:22][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 08:55:22][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 08:55:22][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 08:55:27][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 08:55:27][                        Main()] Calling IntegrityValidation()
[09-21-2015 08:55:27][         IntegrityValidation()] Starting Function
[09-21-2015 08:55:27][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 08:55:27][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 08:55:27][         IntegrityValidation()] Date Time 21-09-2015 08:55 AM
[09-21-2015 08:55:27][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:55:27][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:55:27][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:27][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:27][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 08:55:27][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 08:55:27][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 08:55:27][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 08:55:27][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 08:55:27][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 08:55:27][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7205
[09-21-2015 08:55:27][         IntegrityValidation()] Validation SUCCESS TransID 7205
[09-21-2015 08:55:27][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 08:55:27][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 08:55:27][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:55:27][                  Salesorder()] Starting Function
[09-21-2015 08:55:27][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '231'
[09-21-2015 08:55:27][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:27][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:27][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:28][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 08:55:28][                  Salesorder()] Releasing the Objects
[09-21-2015 08:55:28][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 08:55:28][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 08:55:28][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '231'
[09-21-2015 08:55:28][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 08:55:28][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 08:55:28][          AR_InvoiceCreation()] Draft Added Successfully  12657
[09-21-2015 08:55:28][          AR_InvoiceCreation()] Draft Details SQL SELECT T0.[LineNum], T0.[ItemCode], T0.[Quantity], T0.[WhsCode], T1.[ManBtchNum] FROM DRF1 T0  INNER JOIN OITM T1 ON T0.[ItemCode] = T1.[ItemCode] WHERE T0.[DocEntry] = '12657'
[09-21-2015 08:55:28][          AR_InvoiceCreation()] Calculating Rounding Amount: -21.4
[09-21-2015 08:55:33][          AR_InvoiceCreation()] Attempting Update the AR Invoice Draft with Batch Information
[09-21-2015 08:55:38][          AR_InvoiceCreation()] Completed with ERROR (Update AR Invoice Draft) 
[09-21-2015 08:55:38][          AR_InvoiceCreation()] Completed with SUCCESS (Update AR Invoice Draft) 
[09-21-2015 08:55:39][          AR_InvoiceCreation()] Attempting to Convert as a AR Invoice Document 
[09-21-2015 08:55:39][          AR_InvoiceCreation()] Completed with SUCCESS (Convert as a AR Invoice Document) 28746
[09-21-2015 08:55:39][          AR_InvoiceCreation()] Attempting to Remove te Draft 
[09-21-2015 08:55:39][          AR_InvoiceCreation()] Completed with SUCCESS
[09-21-2015 08:55:39][     MarketingDocuments_Sync()] Calling Funcion AR_IncomingPayment() : AR Invoice DocEntry 28746
[09-21-2015 08:55:39][            AR_IncomingPayment] Starting Function
[09-21-2015 08:55:39][            AR_IncomingPayment] Amount : 5.35
[09-21-2015 08:55:39][            AR_IncomingPayment] Attempting to Add  
[09-21-2015 08:55:40][            AR_IncomingPayment] Completed with SUCCESS.
[09-21-2015 08:55:40][            AR_IncomingPayment] Releasing the Objects
[09-21-2015 08:55:40][     MarketingDocuments_Sync()] Date Time 21-09-2015 08:55 AM
[09-21-2015 08:55:40][     MarketingDocuments_Sync()] Validation Update SQL UPDATE LIVE_INTDB.. [AB_SalesTransHeader]SET [Status] = 'SUCCESS' ,[ErrorMsg] = '' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE(), [ARDocEntry] = '28746' WHERE [ID] = '7205'UPDATE LIVE_INTDB.. [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '7205'
[09-21-2015 08:55:40][     MarketingDocuments_Sync()] Executing Query
[09-21-2015 08:55:40][     MarketingDocuments_Sync()] Committed the Transaction Reference POSNumber : B034861
[09-21-2015 08:55:40][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:55:40][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 08:55:40][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 08:55:40][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 08:55:40][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 08:55:40][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 08:55:40][                        Main()] Completed with SUCCESS
[09-21-2015 09:41:29][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 09:41:29][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:41:29][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:41:29][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:41:30][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 09:41:30][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:41:30][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:41:34][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:41:34][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 09:41:34][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 09:41:34][      ConnectToTargetCompany()] Starting function
[09-21-2015 09:41:34][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 09:41:35][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 09:41:35][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 09:41:41][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 09:41:41][                        Main()] Calling IntegrityValidation()
[09-21-2015 09:41:41][         IntegrityValidation()] Starting Function
[09-21-2015 09:41:41][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 09:41:41][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 09:41:41][         IntegrityValidation()] Date Time 21-09-2015 09:41 AM
[09-21-2015 09:41:41][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 09:41:41][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 09:41:41][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:41:41][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:41:41][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 09:41:41][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 09:41:41][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 09:41:41][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 09:41:41][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 09:41:41][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 09:41:41][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 7206
[09-21-2015 09:41:41][         IntegrityValidation()] Validation SUCCESS TransID 7206
[09-21-2015 09:41:41][         IntegrityValidation()] Calling Function AR_InvoiceCreation()
[09-21-2015 09:41:41][     MarketingDocuments_Sync()] Starting Function 
[09-21-2015 09:41:41][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 09:41:41][                  Salesorder()] Starting Function
[09-21-2015 09:41:41][                  Salesorder()] Fetching Sales Order Information : SELECT T0.[LineNum], T0.[ItemCode] FROM [Stuttgart LIVE].dbo.RDR1 T0 WHERE T0.[DocEntry] = '232'
[09-21-2015 09:41:42][                  Salesorder()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:41:42][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:41:42][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:41:43][                  Salesorder()] Completed with SUCCESS.
[09-21-2015 09:41:43][                  Salesorder()] Releasing the Objects
[09-21-2015 09:41:43][     MarketingDocuments_Sync()] Calling Funcion AR_InvoiceCreation() : AR Invoice DocEntry 
[09-21-2015 09:41:43][          AR_InvoiceCreation()] Starting Function 
[09-21-2015 09:41:43][          AR_InvoiceCreation()] Getting Sales Order Information select T0.ItemCode , T0.Quantity , T0.LineTotal , T0.VatGroup, T0.WhsCode,T0.LineNum  from RDR1 T0 where t0.DocEntry = '232'
[09-21-2015 09:41:43][          AR_InvoiceCreation()] AR Invoice dPostxdatetime 12:00:00 AM
[09-21-2015 09:41:43][          AR_InvoiceCreation()] Attempting to Add Draft 
[09-21-2015 09:41:44][          AR_InvoiceCreation()] Draft Added Successfully  12658
[09-21-2015 09:41:44][          AR_InvoiceCreation()] Draft Details SQL SELECT T0.[LineNum], T0.[ItemCode], T0.[Quantity], T0.[WhsCode], T1.[ManBtchNum] FROM DRF1 T0  INNER JOIN OITM T1 ON T0.[ItemCode] = T1.[ItemCode] WHERE T0.[DocEntry] = '12658'
[09-21-2015 09:41:44][          AR_InvoiceCreation()] Calculating Rounding Amount: -5.35
[09-21-2015 09:41:47][          AR_InvoiceCreation()] Attempting Update the AR Invoice Draft with Batch Information
[09-21-2015 09:41:53][          AR_InvoiceCreation()] Completed with SUCCESS (Update AR Invoice Draft) 
[09-21-2015 09:41:54][          AR_InvoiceCreation()] Attempting to Convert as a AR Invoice Document 
[09-21-2015 09:42:00][          AR_InvoiceCreation()] Completed with SUCCESS (Convert as a AR Invoice Document) 28747
[09-21-2015 09:42:02][          AR_InvoiceCreation()] Attempting to Remove te Draft 
[09-21-2015 09:42:04][          AR_InvoiceCreation()] Completed with SUCCESS
[09-21-2015 09:42:08][     MarketingDocuments_Sync()] Calling Funcion AR_IncomingPayment() : AR Invoice DocEntry 28747
[09-21-2015 09:42:09][            AR_IncomingPayment] Starting Function
[09-21-2015 09:42:09][            AR_IncomingPayment] Amount : 5.35
[09-21-2015 09:42:09][            AR_IncomingPayment] Attempting to Add  
[09-21-2015 09:42:10][            AR_IncomingPayment] Completed with SUCCESS.
[09-21-2015 09:42:10][            AR_IncomingPayment] Releasing the Objects
[09-21-2015 09:42:12][     MarketingDocuments_Sync()] Date Time 21-09-2015 09:42 AM
[09-21-2015 09:42:12][     MarketingDocuments_Sync()] Validation Update SQL UPDATE LIVE_INTDB.. [AB_SalesTransHeader]SET [Status] = 'SUCCESS' ,[ErrorMsg] = '' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE(), [ARDocEntry] = '28747' WHERE [ID] = '7206'UPDATE LIVE_INTDB.. [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '7206'
[09-21-2015 09:42:12][     MarketingDocuments_Sync()] Executing Query
[09-21-2015 09:42:13][     MarketingDocuments_Sync()] Committed the Transaction Reference POSNumber : B034862
[09-21-2015 09:42:13][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 09:42:13][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 09:42:13][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 09:42:13][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 09:42:13][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:42:13][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:42:13][                        Main()] Completed with SUCCESS
[09-21-2015 09:46:14][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 09:46:14][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:14][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:15][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:15][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 09:46:15][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:15][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:21][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 09:46:21][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 09:46:21][      ConnectToTargetCompany()] Starting function
[09-21-2015 09:46:21][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 09:46:22][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 09:46:22][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 09:46:33][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 09:46:33][                        Main()] Calling IntegrityValidation()
[09-21-2015 09:46:33][         IntegrityValidation()] Starting Function
[09-21-2015 09:46:33][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 09:46:33][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 09:46:33][         IntegrityValidation()] Date Time 21-09-2015 09:46 AM
[09-21-2015 09:46:33][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 09:46:33][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 09:46:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:34][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:34][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 09:46:34][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 09:46:34][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 09:46:34][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 09:46:34][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 09:46:34][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 09:46:34][         IntegrityValidation()] Date Time 21-09-2015 09:46 AM
[09-21-2015 09:46:34][         IntegrityValidation()] Date Time 21-09-2015 09:46 AM
[09-21-2015 09:46:34][         IntegrityValidation()] Date Time 21-09-2015 09:46 AM
[09-21-2015 09:46:34][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' 
[09-21-2015 09:46:34][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 09:46:34][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:35][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:35][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 09:46:35][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 09:46:35][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:35][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 09:46:36][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 09:46:36][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 09:46:36][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 09:46:36][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 09:46:36][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 09:46:36][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 09:46:36][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 09:46:36][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 09:46:36][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:46:36][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:46:36][                        Main()] Completed with SUCCESS
[09-21-2015 09:50:22][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 09:50:22][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:22][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:22][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:22][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 09:50:22][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:22][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:26][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:26][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 09:50:27][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 09:50:27][      ConnectToTargetCompany()] Starting function
[09-21-2015 09:50:27][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 09:50:27][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 09:50:27][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 09:50:31][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 09:50:31][                        Main()] Calling IntegrityValidation()
[09-21-2015 09:50:31][         IntegrityValidation()] Starting Function
[09-21-2015 09:50:31][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 09:50:32][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 09:50:32][         IntegrityValidation()] Date Time 21-09-2015 09:50 AM
[09-21-2015 09:50:32][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 09:50:32][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 09:50:32][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:32][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:32][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 09:50:32][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 09:50:32][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 09:50:32][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 09:50:32][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 09:50:32][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 09:50:32][         IntegrityValidation()] Date Time 21-09-2015 09:50 AM
[09-21-2015 09:50:32][         IntegrityValidation()] Date Time 21-09-2015 09:50 AM
[09-21-2015 09:50:32][         IntegrityValidation()] Date Time 21-09-2015 09:50 AM
[09-21-2015 09:50:32][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' 
[09-21-2015 09:50:32][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 09:50:32][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:32][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:32][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 09:50:32][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 09:50:32][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:32][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:32][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:32][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 09:50:32][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:32][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:32][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:32][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 09:50:33][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:33][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 09:50:33][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:33][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 09:50:33][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:33][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name  FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 09:50:33][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:33][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 09:50:33][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:33][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 09:50:33][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:33][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 09:50:33][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:33][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 09:50:33][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 09:50:33][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 09:50:33][                        Main()] Completed with SUCCESS
[09-21-2015 10:41:54][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 10:41:55][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:41:55][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:41:55][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:41:55][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 10:41:55][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:41:55][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:42:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:42:01][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 10:42:01][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 10:42:01][      ConnectToTargetCompany()] Starting function
[09-21-2015 10:42:01][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 10:42:02][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 10:42:02][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 10:43:32][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 10:43:32][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:32][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:33][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:33][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 10:43:33][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:33][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:38][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:38][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 10:43:38][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 10:43:38][      ConnectToTargetCompany()] Starting function
[09-21-2015 10:43:38][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 10:43:38][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 10:43:38][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 10:43:49][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 10:43:49][                        Main()] Calling IntegrityValidation()
[09-21-2015 10:43:49][         IntegrityValidation()] Starting Function
[09-21-2015 10:43:49][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 10:43:49][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 10:43:49][         IntegrityValidation()] Date Time 21-09-2015 10:43 AM
[09-21-2015 10:43:49][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 10:43:49][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 10:43:49][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:49][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:49][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 10:43:49][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 10:43:49][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 10:43:49][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 10:43:49][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 10:43:49][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 10:43:49][         IntegrityValidation()] Date Time 21-09-2015 10:43 AM
[09-21-2015 10:43:49][         IntegrityValidation()] Date Time 21-09-2015 10:43 AM
[09-21-2015 10:43:49][         IntegrityValidation()] Date Time 21-09-2015 10:43 AM
[09-21-2015 10:43:49][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' 
[09-21-2015 10:43:49][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 10:43:49][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:50][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:50][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 10:43:50][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 10:43:50][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:50][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:50][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:50][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 10:43:50][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:50][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:50][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:50][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM OITM)
[09-21-2015 10:43:50][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:50][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:51][          ExecuteSQLQuery_DT()] Completed with ERROR
[09-21-2015 10:43:51][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 10:43:51][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:51][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:51][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:51][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 10:43:51][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:51][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:51][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:51][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 10:43:51][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:51][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:51][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:51][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name, SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 10:43:51][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:51][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:52][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:52][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 10:43:52][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:52][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:52][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:52][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 10:43:52][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:52][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:53][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:53][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 10:43:53][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:53][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:53][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:53][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 10:43:53][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:54][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:54][                        Main()] Tender sync Query exec INSERT INTO [LIVE_INTDB].dbo.AB_Tender(CreditCard,CardName,SAPSyncDate,SAPSyncDateTime) SELECT CreditCard,CardName,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OCRC T0  WHERE T0.CreditCard NOT IN (SELECT CreditCard FROM [LIVE_INTDB].dbo.AB_Tender) 
[09-21-2015 10:43:54][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:54][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:54][                        Main()] Tender update Query exec UPDATE [LIVE_INTDB].dbo.AB_Tender SET CreditCard = T1.CreditCard,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM AB_Tender T0  INNER JOIN [Stuttgart LIVE].dbo.OCRC T1 ON T1.CreditCard = T0.CreditCard  WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 10:43:54][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:43:54][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:43:54][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:43:54][                        Main()] Completed with SUCCESS
[09-21-2015 10:45:00][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 10:45:00][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:00][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:01][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:01][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 10:45:01][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:01][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:08][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:08][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 10:45:08][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 10:45:08][      ConnectToTargetCompany()] Starting function
[09-21-2015 10:45:08][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 10:45:09][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 10:45:09][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 10:45:19][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 10:45:19][                        Main()] Calling IntegrityValidation()
[09-21-2015 10:45:19][         IntegrityValidation()] Starting Function
[09-21-2015 10:45:19][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 10:45:19][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 10:45:19][         IntegrityValidation()] Date Time 21-09-2015 10:45 AM
[09-21-2015 10:45:19][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 10:45:19][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 10:45:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:19][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 10:45:19][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 10:45:19][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 10:45:19][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 10:45:19][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 10:45:19][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 10:45:20][         IntegrityValidation()] Date Time 21-09-2015 10:45 AM
[09-21-2015 10:45:20][         IntegrityValidation()] Date Time 21-09-2015 10:45 AM
[09-21-2015 10:45:20][         IntegrityValidation()] Date Time 21-09-2015 10:45 AM
[09-21-2015 10:45:20][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' 
[09-21-2015 10:45:20][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:20][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 10:45:20][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 10:45:20][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:20][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 10:45:20][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:20][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM OITM)
[09-21-2015 10:45:20][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Completed with ERROR
[09-21-2015 10:45:20][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 10:45:20][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:20][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 10:45:20][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:20][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 10:45:20][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:20][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name, SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 10:45:20][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:20][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:21][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,T1.Price,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 10:45:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:21][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 10:45:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:21][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 10:45:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:21][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 10:45:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:21][                        Main()] Tender sync Query exec INSERT INTO [LIVE_INTDB].dbo.AB_Tender(CreditCard,CardName,SAPSyncDate,SAPSyncDateTime) SELECT CreditCard,CardName,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OCRC T0  WHERE T0.CreditCard NOT IN (SELECT CreditCard FROM [LIVE_INTDB].dbo.AB_Tender) 
[09-21-2015 10:45:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:21][                        Main()] Tender update Query exec UPDATE [LIVE_INTDB].dbo.AB_Tender SET CreditCard = T1.CreditCard,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM AB_Tender T0  INNER JOIN [Stuttgart LIVE].dbo.OCRC T1 ON T1.CreditCard = T0.CreditCard  WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 10:45:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 10:45:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 10:45:21][                        Main()] Completed with SUCCESS
[09-21-2015 14:23:14][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 14:23:14][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:23:14][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:23:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:23:21][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 14:23:21][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:23:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:23:25][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:23:25][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 14:23:25][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 14:23:25][      ConnectToTargetCompany()] Starting function
[09-21-2015 14:23:25][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 14:23:25][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 14:23:25][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 14:25:09][      GetSystemIntializeInfo()] Fetching INT DB Query : [AE_SP001_GetINTDBInformation]'[Stuttgart LIVE]'
[09-21-2015 14:25:09][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:09][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:09][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:09][      GetSystemIntializeInfo()] Payment Query : select T0.* , T1.AcctCode , T1.CreditCard , (select top 1 RCT3.CrCardNum  from [Stuttgart LIVE].. RCT3 where RCT3.CreditCard = T1.CreditCard ) [CreditNumber]  into #Payment from [AB_Payment] T0 left outer join [Stuttgart LIVE].. OCRC T1 on T1.CardName = T0.PaymentCode select #Payment.HeaderID  , COUNT(isnull(#Payment.CreditCard,0 )) [CreditCardCount] into #Paycount from #Payment where isnull(#Payment.CreditCard,'') = '' group by #Payment.HeaderID select T0.*, isnull(T1.CreditCardCount,'') [CreditCardCount] into #PaymentFinal from #Payment T0 left outer join #Paycount T1 on T0.HeaderID  = T1.HeaderID select T4.*, case when isnull(T4.CreditCard,'') = '' then 'Payment Code {' + T4.PaymentCode  + '} does not exist in Credit Cards Setup' else '' end [ErrMsg]  from #PaymentFinal T4 drop table #Payment drop table #Paycount drop table #PaymentFinal
[09-21-2015 14:25:09][      GetSystemIntializeInfo()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:09][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:12][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:12][      GetSystemIntializeInfo()] Completed with SUCCESS
[09-21-2015 14:25:12][                        Main()] Calling ConnectToTargetCompany()
[09-21-2015 14:25:12][      ConnectToTargetCompany()] Starting function
[09-21-2015 14:25:12][      ConnectToTargetCompany()] Initializing the Company Object
[09-21-2015 14:25:12][      ConnectToTargetCompany()] Assigning the representing database name
[09-21-2015 14:25:12][      ConnectToTargetCompany()] Connecting to the Company Database.
[09-21-2015 14:25:17][      ConnectToTargetCompany()] Completed with SUCCESS
[09-21-2015 14:25:17][                        Main()] Calling IntegrityValidation()
[09-21-2015 14:25:17][         IntegrityValidation()] Starting Function
[09-21-2015 14:25:17][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 2630
[09-21-2015 14:25:17][         IntegrityValidation()] Validation Fails TransID 2630
[09-21-2015 14:25:17][         IntegrityValidation()] Date Time 21-09-2015 02:25 PM
[09-21-2015 14:25:17][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' 
[09-21-2015 14:25:17][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 14:25:17][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:17][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:17][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 4887
[09-21-2015 14:25:17][         IntegrityValidation()] Validation Fails TransID 4887
[09-21-2015 14:25:17][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 5231
[09-21-2015 14:25:17][         IntegrityValidation()] Validation Fails TransID 5231
[09-21-2015 14:25:17][         IntegrityValidation()] Calling Function AR_InvoiceCreation() TransID 6409
[09-21-2015 14:25:17][         IntegrityValidation()] Validation Fails TransID 6409
[09-21-2015 14:25:17][         IntegrityValidation()] Date Time 21-09-2015 02:25 PM
[09-21-2015 14:25:17][         IntegrityValidation()] Date Time 21-09-2015 02:25 PM
[09-21-2015 14:25:17][         IntegrityValidation()] Date Time 21-09-2015 02:25 PM
[09-21-2015 14:25:17][         IntegrityValidation()] Validation Update SQL UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '2630'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014211166 has no sales BOM.'  WHERE [HeaderID] = '2630' and [ItemCode] = '2888014211166' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '4887'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888100113404 has no sales BOM.'  WHERE [HeaderID] = '4887' and [ItemCode] = '2888100113404' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '5231'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code 2888014220151 has no sales BOM.'  WHERE [HeaderID] = '5231' and [ItemCode] = '2888014220151' UPDATE [AB_SalesTransHeader]SET [Status] = 'FAIL' ,[ErrorMsg] = 'Validation Fails Pls find the line level error msg' , [SAPSyncDate] =  DATEADD(day,datediff(day,0,GETDATE()),0) ,[SAPSyncDateTime] = GETDATE() WHERE [ID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = ''  WHERE [HeaderID] = '6409'UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' UPDATE [AB_SalesTransDetail] SET [ErrMsg] = 'Item Code B999 has no sales BOM.'  WHERE [HeaderID] = '6409' and [ItemCode] = 'B999' 
[09-21-2015 14:25:17][         IntegrityValidation()] Calling Function ExecuteSQLQuery_DT() 
[09-21-2015 14:25:17][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:18][         IntegrityValidation()] Completed with SUCCESS 
[09-21-2015 14:25:18][                        Main()] Item Master Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemMaster(ItemCode,ItemName,FrgnName,EASIGroup,EASIDept,ProductType,SalesUnitMsr,Barcode,Active,ServiceCharge,GST,AllowDiscount,AllowZero,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept, NULL [ProductType],T0.SalUnitMsr,T0.CodeBars,T0.validFor, CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_ItemMaster) 
[09-21-2015 14:25:18][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:18][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:18][                        Main()] Item Master Sync update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET ItemName = T1.ItemName,FrgnName = T1.U_POSDesc,EASIGroup = T1.U_AB_EASIGrp1,  EASIDept = T1.U_AB_EASIDept,SalesUnitMsr = T1.SalUnitMsr, Barcode = T1.CodeBars,  Active = T1.ValidFor,ServiceCharge = T1.U_POSNoService,GST = T1.U_POSNoGst,  AllowDiscount = T1.U_POSNonDisc,AllowZero = T1.U_POSZeroPrice,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_ItemMaster T0 INNER JOIN (SELECT T0.ItemCode,T0.ItemName,T0.U_POSDesc,T1.U_AB_EASIGrp1,T0.U_AB_EASIDept,T0.SalUnitMsr,T0.CodeBars,T0.ValidFor, 		    CASE WHEN ISNULL(T0.U_POSNoService,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoService], 			CASE WHEN ISNULL(T0.U_POSNoGst,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNoGst], 			CASE WHEN ISNULL(T0.U_POSNonDisc,'FALSE') = 'FALSE' THEN 0 ELSE 1 END [U_POSNonDisc], 			CASE WHEN ISNULL(T0.U_POSZeroPrice,'FALSE') = 'FALSE' THEN 0 ELSE 1 END  [U_POSZeroPrice]  			FROM [Stuttgart LIVE].dbo.OITM T0 			INNER JOIN [Stuttgart LIVE].dbo.OITB T1 ON T1.ItmsGrpCod = T0.ItmsGrpCod 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		    ) T1 ON T1.ItemCode = T0.ItemCode
[09-21-2015 14:25:18][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:18][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:18][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:18][                        Main()] Item Master Active Status update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemMaster SET Active = 'N' WHERE ItemCode IN (SELECT SWW FROM OITM)
[09-21-2015 14:25:18][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:18][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Completed with ERROR
[09-21-2015 14:25:19][                        Main()] Item Group Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_ItemGroup(Code,Name,SAPSyncDate,SAPSyncDateTime) SELECT ItmsGrpCod,ItmsGrpNam,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITB T0  WHERE T0.ItmsGrpCod NOT IN (SELECT Code FROM  [LIVE_INTDB].dbo.AB_ItemGroup) 
[09-21-2015 14:25:19][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:19][                        Main()] Item Group Update Query Exec UPDATE [LIVE_INTDB].dbo.AB_ItemGroup  SET Code = T1.ItmsGrpCod,Name = T1.ItmsGrpNam,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_ItemGroup T0 INNER JOIN (SELECT T0.ItmsGrpCod,T0.ItmsGrpNam 			FROM [Stuttgart LIVE].dbo.OITB T0 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		  ) T1 ON T1.ItmsGrpCod = T0.Code
[09-21-2015 14:25:19][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:19][                        Main()] Department Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Department(Code,Name,Active,SAPSyncDate,SAPSyncDateTime) SELECT Code,Name,U_AB_Active,DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0  WHERE T0.Code NOT IN (SELECT Code FROM [LIVE_INTDB].dbo.AB_Department) 
[09-21-2015 14:25:19][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:19][                        Main()] Department update Query Exec UPDATE [LIVE_INTDB].dbo.AB_Department SET Code = T1.Code,Name = T1.Name, SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Department T0  INNER JOIN (SELECT T0.Code,T0.Name 	        FROM [Stuttgart LIVE].dbo.[@AB_EASIDEPT] T0 	        WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)            ) T1 ON T1.Code = T0.Code
[09-21-2015 14:25:19][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:19][                        Main()] Price list Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_PriceList(ItemCode,PriceList,PriceListName,Currency,Price,SAPSyncDate,SAPSyncDateTime) SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency,   CASE WHEN T0.UgpEntry = -1 THEN T1.Price       WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price       ELSE T3.Price END [Price], DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OITM T0  LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1  LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T0.ItemCode = T3.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry  LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList  WHERE T0.ItemCode NOT IN (SELECT ItemCode FROM [LIVE_INTDB].dbo.AB_PriceList)  AND (T1.PriceList = 1 OR T3.PriceList = 1) 
[09-21-2015 14:25:19][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:19][                        Main()] Price list update Query Exec UPDATE [LIVE_INTDB].dbo.AB_PriceList SET PriceListName = T1.ListName,Currency = T1.Currency,Price = T1.Price,  SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM [LIVE_INTDB].dbo.AB_PriceList T0 INNER JOIN (SELECT T0.ItemCode,T2.ListNum,T2.ListName ,T1.Currency, 			CASE WHEN T0.UgpEntry = -1 THEN T1.Price                   WHEN (T0.UgpEntry <> -1 AND T0.SUoMEntry =  T0.IUoMEntry) THEN T1.Price                  ELSE T3.Price END [Price] 			FROM [Stuttgart LIVE].dbo.OITM T0 			LEFT JOIN [Stuttgart LIVE].dbo.ITM1 T1 ON T0.ItemCode = T1.ItemCode AND T1.PriceList = 1 			LEFT JOIN [Stuttgart LIVE].dbo.OPLN T2 ON T2.ListNum = T1.PriceList 			LEFT JOIN [Stuttgart LIVE].dbo.ITM9 T3 ON T3.ItemCode = T0.ItemCode AND T3.PriceList = 1 AND T0.SUoMEntry = T3.UomEntry 			WHERE T0.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3) 		   ) T1 ON T1.ItemCode = T0.ItemCode AND T1.ListNum = T0.PriceList 
[09-21-2015 14:25:19][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:19][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:21][                        Main()] Warehouse Sync Query Exec INSERT INTO [LIVE_INTDB].dbo.AB_Warehouses(WhsCode,WhsName,Active,SAPSyncDate,SAPSyncDateTime) SELECT WhsCode,WhsName,CASE WHEN Inactive = 'N' THEN 'Y' ELSE 'N' END [Active],  DATEADD(DAY, DATEDIFF(day, 0, GETDATE()), 0) [SAPSyncDate],GETDATE() [SAPSyncDateTime] FROM [Stuttgart LIVE].dbo.OWHS T0  WHERE T0.WhsCode NOT IN (SELECT WhsCode FROM [LIVE_INTDB].dbo.AB_Warehouses) 
[09-21-2015 14:25:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:21][                        Main()] Warehouse Updation Query Exec UPDATE [LIVE_INTDB].dbo.AB_Warehouses SET WhsName = T1.WhsName,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE() FROM [LIVE_INTDB].dbo.AB_Warehouses T0 INNER JOIN [Stuttgart LIVE].dbo.OWHS T1 ON T1.WhsCode = T0.WhsCode WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 14:25:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:21][                        Main()] Tender sync Query exec INSERT INTO [LIVE_INTDB].dbo.AB_Tender(CreditCard,CardName,SAPSyncDate,SAPSyncDateTime) SELECT CreditCard,CardName,DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0) [SAPSyncDate],GETDATE() [SAPSyncDateTime]  FROM [Stuttgart LIVE].dbo.OCRC T0  WHERE T0.CreditCard NOT IN (SELECT CreditCard FROM [LIVE_INTDB].dbo.AB_Tender) 
[09-21-2015 14:25:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:21][                        Main()] Tender update Query exec UPDATE [LIVE_INTDB].dbo.AB_Tender SET CreditCard = T1.CreditCard,SAPSyncDate = DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),0),SAPSyncDateTime = GETDATE()  FROM AB_Tender T0  INNER JOIN [Stuttgart LIVE].dbo.OCRC T1 ON T1.CreditCard = T0.CreditCard  WHERE T1.UpdateDate >= DATEADD(DAY,DATEDIFF(DAY,0,GETDATE()),- 3)
[09-21-2015 14:25:21][                        Main()] Calling ExecuteSQLQuery_DT()
[09-21-2015 14:25:21][          ExecuteSQLQuery_DT()] Starting function
[09-21-2015 14:25:21][          ExecuteSQLQuery_DT()] Completed with SUCCESS
[09-21-2015 14:25:21][                        Main()] Completed with SUCCESS
